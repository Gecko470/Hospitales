@using Hospitales.Clases
@model IEnumerable<TipoUsuarioPaginaCLS>
@{
    ViewData["Title"] = "Tipos Usuario Páginas";
    List<SelectListItem> listaTiposUsuario = ViewBag.listaTiposUsuario;
    List<SelectListItem> listaPaginas = ViewBag.listaPaginas;
}

<h1>Tipos Usuario Páginas</h1>
<hr />
<div class="d-flex justify-content-between align-items-center mb-2">
    <div class="w-50 d-flex align-items-center">

        <label class="me-4">Tipo Usuario:</label>
        @Html.DropDownList("iidTipoUsuario", listaTiposUsuario, new{ @class = "form form-select"})
        <input type="button" value="Buscar" class="btn btn-info ms-4" onclick="Buscar()" />
        <input type="button" value="Limpiar" class="btn btn-danger ms-2" onclick="limpiar()" />

    </div>
    <div>
        <input type="button" value="Excel" class="btn btn-outline-success" onclick="Excel()" />
        <input type="button" value="Word" class="btn btn-outline-primary ms-2" onclick="Word()" />
        <input type="button" value="PDF" class="btn btn-outline-danger ms-2" onclick="PDF()" />
        <input type="button" value="Imprimir" class="btn btn-outline-secondary ms-2" onclick="Imprimir('TiposUsuarioPaginas')" />
        <input type="button" value="Descargar" class="btn btn-outline-info ms-2" onclick="DescargarPDF('TipoUsuarioPagina','TiposUsuarioPaginas')" />
    </div>
</div>

<form asp-action="Descargar" asp-controller="TipoUsuarioPagina" id="frmExportar">
    <table class="table table-striped" id="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(x => x.Iidtipousuariopagina)<input type="checkbox" class="ms-1 trCheck" checked name="nombrePropiedades" value="Iidtipousuariopagina" />
                    <input type="hidden" name="tipo" id="tipo" />
                </th>
                <th>@Html.DisplayNameFor(x => x.NombreTipoUsuario)<input type="checkbox" class="ms-1 trCheck" checked name="nombrePropiedades" value="NombreTipoUsuario" /></th>
                <th>@Html.DisplayNameFor(x => x.NombrePagina)<input type="checkbox" class="ms-1 trCheck" checked name="nombrePropiedades" value="NombrePagina" /></th>
                <th>Acciones</th>
            </tr>
        </thead>

        <tbody id="tbody"></tbody>
    </table>
</form>
<input type="hidden" id="txtDelete" name="idEliminar" />

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel"></h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="hidden" id="Iidtipousuariopagina" />
                    <label class="control-label">Tipo Usuario</label>
                    @Html.DropDownList("Iidtipousuario", listaTiposUsuario, new{ @class = "form-control form-select"})
                </div>
                <div class="form-group">
                    <label class="control-label">Página</label>
                    @Html.DropDownList("Iidpagina", listaPaginas, new{ @class = "form-control form-select"})
                </div>
            </div>
            <div id="divBotones"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnClose">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Aceptar</button>
            </div>
            <div id="divErrores"></div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        let controller = "TipoUsuarioPagina";
        let campos = ["iidtipousuariopagina", "nombreTipoUsuario", "nombrePagina"];

        window.onload = () => {
            Listar();
          
        }

        function listarBotones() {
            let contenido = "";

            $.get("/TipoUsuarioPagina/listarBotones", (resp) => {
                if (resp != null) {
                    contenido += "<table class = 'table table-striped mx-auto'>";
                    contenido += "<thead>";
                    contenido += "<tr>";
                    contenido += "<th>Id</th><th>Accion</th><th></th>";
                    contenido += "</tr>";
                    contenido += "</thead>";
                    contenido += "<tbody>";
                    resp.forEach((item) => {
                        contenido += "<tr>";
                        contenido += `<td>${item.iidboton}</td><td>${item.nombre}</td><td><input type='checkbox' class = 'check' id = 'chk${item.iidboton}' /></td>`;
                        contenido += "</tr>";
                    });
                    contenido += "</tbody>";
                    contenido += "</table>";

                    document.getElementById("divBotones").innerHTML = contenido;

                    ObtenerBotones();
                }
            });
        }

        function ObtenerBotones() {
            let id = document.getElementById("Iidtipousuariopagina").value;

            $.get("/TipoUsuarioPagina/ObtenerBotones/?id=" + id, (resp) => {
                console.table(resp);
                resp.forEach(item => {
                    let idcheck = "chk" + item.iidboton;
                    document.getElementById(idcheck).checked = true;
                });
            });
        }

        function Listar() {
            let url = "/TipoUsuarioPagina/Listar";
            Tabla(url, campos, controller, true);
        }

        function Buscar() {

            let iidTipoUsuario = document.getElementById("iidTipoUsuario").value;
            let url = "/TipoUsuarioPagina/Listar/?iidTipoUsuario=" + iidTipoUsuario;

            Tabla(url, campos, controller, true);
        }

        function limpiar() {
            document.getElementById("iidTipoUsuario").value = "";
            Listar();
        }

        function LimpiarModal() {
            document.getElementById("Iidtipousuariopagina").value = "";
            let controles = document.getElementsByClassName("form-control");
            Array.from(controles).forEach((item) => {
                item.value = "";
            });
        }

        function Open(id) {
            LimpiarModal();
            document.getElementById("divErrores").innerHTML = "";

            if (id == 0) {
                $("#exampleModalLabel").text("Tipo Usuario Pagina - Create");
            }
            else {
                $("#exampleModalLabel").text("Tipo Usuario Pagina - Edit");
            }
        }

        function Edit(id) {
            Open(id);

            $.get("/TipoUsuarioPagina/Edit/?id=" + id, (resp) => {
                console.table(resp);
                if (resp != "") {
                    document.getElementById("Iidtipousuariopagina").value = resp.iidtipousuariopagina;
                    document.getElementById("Iidtipousuario").value = resp.iidtipousuario;
                    document.getElementById("Iidpagina").value = resp.iidpagina;
                }

                listarBotones();
            });
        }

        function Guardar() {
            let Iidtipousuariopagina = document.getElementById("Iidtipousuariopagina").value * 1;
            let Iidtipousuario = document.getElementById("Iidtipousuario").value;
            let Iidpagina = document.getElementById("Iidpagina").value;
            let checks = document.getElementsByClassName("check");

            var frm = new FormData();
            frm.append("Iidtipousuariopagina", Iidtipousuariopagina);
            frm.append("Iidtipousuario", Iidtipousuario);
            frm.append("Iidpagina", Iidpagina);

            Array.from(checks).forEach((item) => {
                if (item.checked == true) {
                    frm.append("idBotones[]", item.id.replace("chk", "") * 1);
                }
            })

            $.ajax({
                type: "POST",
                url: "/TipoUsuarioPagina/Guardar",
                data: frm,
                processData: false,
                contentType: false,
                success: (resp) => {
                    if (resp == "1") {
                        exito("Guardado correctamente..");
                        document.getElementById("btnClose").click();
                        Listar();
                    }
                    else {
                        error();
                        document.getElementById("divErrores").innerHTML = resp;
                    }
                }
            });
        }

        function Eliminar(id) {
            document.getElementById("txtDelete").value = id;

            mostrarModal().then(result => {
                if (result.isConfirmed) {
                    $.post("/Persona/Delete", { idEliminar: id }, (resp) => {
                        if (resp == 1) {
                            exito("Borrado correctamente..");
                            Listar();
                        }
                        else {
                            error();
                        }
                    });
                } else if (result.isDenied) {
                    Swal.fire('Los cambios no se han guardado', '', 'info')
                }
            });
        }

    </script>
}


